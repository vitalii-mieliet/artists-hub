name: Notify Discord and Slack on Push to Dev

on:
  push:
    branches:
      - dev

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for dependency changes
        id: deps_check
        run: |
          git fetch origin dev
          if git diff --name-only origin/dev..HEAD | grep -E 'package(-lock)?\.json'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare commit message and full notification
        id: notify_msg
        run: |
          # Get the latest commit message
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")

          if [ "${{ steps.deps_check.outputs.changed }}" = "true" ]; then
            TEXT="üîÑ –í–Ω–µ—Å–µ–Ω—ñ –∑–º—ñ–Ω–∏ –≤ –≥—ñ–ª–∫—É \`dev\`: üì¶ **–û–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ!**\\n\\n–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è–º —Ä–æ–±–æ—Ç–∏ –∑–±–µ—Ä–µ–∂—ñ—Ç—å —ñ –æ–Ω–æ–≤—ñ—Ç—å —Å–≤–æ—ó –≥—ñ–ª–∫–∏:\\n\`\`\`bash\\ngit add .\\ngit commit -m \"–í–∞—à –∫–æ–º—ñ—Ç\"\\ngit checkout dev\\ngit pull origin dev\\ngit checkout –≤–∞—à–∞-–≥—ñ–ª–∫–∞\\n\\nnpm install\\n\`\`\`\\n\\nüìù –û—Å—Ç–∞–Ω–Ω—ñ–π –∫–æ–º—ñ—Ç: $COMMIT_MESSAGE"
          else
            TEXT="üîÑ –í–Ω–µ—Å–µ–Ω—ñ –∑–º—ñ–Ω–∏ –≤ –≥—ñ–ª–∫—É \`dev\`.\\n\\n–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è–º —Ä–æ–±–æ—Ç–∏ –∑–±–µ—Ä–µ–∂—ñ—Ç—å —ñ –æ–Ω–æ–≤—ñ—Ç—å —Å–≤–æ—ó –≥—ñ–ª–∫–∏:\\n\`\`\`bash\\ngit add .\\ngit commit -m \"–í–∞—à –∫–æ–º—ñ—Ç\"\\ngit checkout dev\\ngit pull origin dev\\ngit checkout –≤–∞—à–∞-–≥—ñ–ª–∫–∞\\n\`\`\`\\n\\nüìù –û—Å—Ç–∞–Ω–Ω—ñ–π –∫–æ–º—ñ—Ç: $COMMIT_MESSAGE"
          fi

          echo "msg<<EOF" >> $GITHUB_OUTPUT
          echo "$TEXT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Discord notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"${{ steps.notify_msg.outputs.msg }}\"}" \
          $DISCORD_WEBHOOK_URL

      - name: Send Slack notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"text\": \"${{ steps.notify_msg.outputs.msg }}\"}" \
          $SLACK_WEBHOOK_URL
